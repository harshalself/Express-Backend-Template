version: '3.8'

services:
  app:
    build: .
    command: npm run dev
    ports:
      - '8000:8000'
    volumes:
      # More selective mounting to avoid conflicts
      - ./src:/app/src
      - ./docs:/app/docs
      - ./database:/app/database
      - ./tests:/app/tests
      - ./package*.json:/app/
      - ./.env:/app/.env
      - ./nodemon.json:/app/nodemon.json
      - ./tsconfig.json:/app/tsconfig.json
      - /app/node_modules
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - NODE_ENV=development
      - PORT=8000

  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: express_backend
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 3s
      retries: 3

volumes:
  postgres_data:
  redis_data:
